// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model User {
  id        String @id @default(uuid())
  username  String @unique
  password  String
  name      String
  email     String
  phoneNumber String 
  profilePicture  String
  reviews   Review[]
  bookings  Booking[]
}

model Amenitie {
  id        String @id @default(uuid())
  name      String
  properties  Propertie[]
}

model Host {
  id        String @id @default(uuid())
  username  String @unique
  password  String
  name      String
  email     String
  phoneNumber String
  profilePicture  String
  aboutMe   String
  listings  Propertie[]
}

model Propertie {
  id        String @id @default(uuid())
  hostId    String
  title     String
  description String
  location  String
  pricePerNight Decimal  @db.Decimal(10,2)
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  rating    Int
  reviews   Review[]
  bookings  Booking[]
  amenities Amenitie[]

  host  Host  @relation(fields: [hostId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  @@index([hostId])
}

model Review {
  id          String @id @default(uuid())
  userId      String
  propertyId  String
  rating      Int
  comment     String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  propertie Propertie @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model Booking {
  id            String @id @default(uuid())
  userId        String 
  propertyId    String
  checkinDate   DateTime
  checkoutDate  DateTime
  numberOfGuests  Int
  totalPrice    Int
  bookingStatus String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  propertie Propertie @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([propertyId])
}